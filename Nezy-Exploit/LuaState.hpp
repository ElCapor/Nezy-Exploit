#include <iostream>
#include <Windows.h>
#include <string>
#include <thread>
#include <vector>
#include <mutex>

#include "Addresses.hpp"


namespace LuaState
{
    int get_job_by_name(std::string job_name)
    {
        auto job_return = 0;

        auto job_start = *reinterpret_cast<uintptr_t*>(Addresses::r_lua_getscheduler() + 308);

        while (job_start != *reinterpret_cast<uintptr_t*>(Addresses::r_lua_getscheduler() + 312))
        {
            if (*reinterpret_cast<std::string*>(*reinterpret_cast<uintptr_t*>(job_start) + 16) == job_name)
            {
                job_return = *reinterpret_cast<uintptr_t*>(job_start);
            }
            job_start += 8;
        }
        return job_return;
    }


    int get_script_context()
    {
        return *reinterpret_cast<uintptr_t*>(get_job_by_name("WaitingHybridScriptsJob") + 304);
    }


    int get_robloxstate()
    {
        int type = 0;
        return Addresses::r_lua_getstate(get_script_context(), &type);
    }
}